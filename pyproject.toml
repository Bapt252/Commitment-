[tool.poetry]
name = "supersmartmatch-v2"
version = "2.1.0"
description = "SuperSmartMatch V2 - Advanced CV and Job Matching System with +13% precision improvement"
authors = ["Baptiste Coma <baptiste.coma@gmail.com>"]
readme = "README.md"
packages = [
    { include = "matching_service" },
    { include = "scripts" }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
pydantic = "^2.5.0"
sqlalchemy = "^2.0.0"
psycopg2-binary = "^2.9.0"
redis = "^5.0.0"
rq = "^1.15.0"
openai = "^1.0.0"
pandas = "^2.1.0"
numpy = "^1.25.0"
scikit-learn = "^1.3.0"
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
httpx = "^0.25.0"
aioredis = "^2.0.0"
asyncpg = "^0.29.0"
alembic = "^1.12.0"
celery = "^5.3.0"
gunicorn = "^21.2.0"
requests = "^2.31.0"
python-multipart = "^0.0.6"
pyjwt = "^2.8.0"
passlib = "^1.7.4"
python-dotenv = "^1.0.0"
rich = "^13.6.0"
typer = "^0.9.0"
xgboost = "^2.0.0"
plotly = "^5.17.0"
dash = "^2.14.0"
streamlit = "^1.28.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
pytest-xdist = "^3.3.0"
black = "^23.10.0"
flake8 = "^6.1.0"
isort = "^5.12.0"
bandit = "^1.7.0"
safety = "^2.3.0"
pre-commit = "^3.5.0"
jupyter = "^1.0.0"
jupyterlab = "^4.0.0"
locust = "^2.17.0"
py-spy = "^0.3.0"
memory-profiler = "^0.61.0"
line-profiler = "^4.1.0"
mypy = "^1.7.0"
coverage = "^7.3.0"
respx = "^0.20.0"
factory-boy = "^3.3.0"
freezegun = "^1.2.0"

[tool.poetry.group.monitoring.dependencies]
grafana-api = "^1.0.3"
prometheus-api-client = "^0.5.3"

[tool.poetry.group.ml.dependencies]
tensorflow = { version = "^2.14.0", optional = true }
torch = { version = "^2.1.0", optional = true }
transformers = { version = "^4.35.0", optional = true }
sentence-transformers = { version = "^2.2.0", optional = true }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]
include = "\\.pyi?$"
extend-exclude = """
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
"""

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["matching_service", "scripts"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["redis.*", "rq.*", "sklearn.*", "plotly.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=matching_service --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as benchmark tests",
    "load: marks tests as load tests"
]

[tool.coverage.run]
source = ["matching_service", "scripts"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]
show_missing = true
skip_covered = false

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*/test_*.py", "*/tests.py"]
