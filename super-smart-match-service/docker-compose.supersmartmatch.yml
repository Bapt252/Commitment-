# Docker Compose pour SuperSmartMatch
# Service unifié de matching Nexten

version: '3.8'

services:
  supersmartmatch:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nexten-supersmartmatch
    ports:
      - "5070:5070"
    environment:
      - ENVIRONMENT=production
      - PORT=5070
      - HOST=0.0.0.0
      # Redis pour le cache (optionnel)
      - REDIS_URL=redis://redis:6379/0
      # Logs
      - LOG_LEVEL=INFO
    volumes:
      # Logs persistants
      - ./logs:/app/logs
      # Configuration (optionnelle)
      - ./config:/app/config:ro
    networks:
      - nexten-network
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5070/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.nexten.service=supersmartmatch"
      - "com.nexten.version=1.0.0"
      - "com.nexten.description=Service unifié de matching"

  # Redis pour le cache (optionnel mais recommandé)
  redis:
    image: redis:7-alpine
    container_name: nexten-supersmartmatch-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nexten-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring avec Prometheus (optionnel)
  prometheus:
    image: prom/prometheus:latest
    container_name: nexten-supersmartmatch-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - nexten-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

  # Grafana pour les dashboards (optionnel)
  grafana:
    image: grafana/grafana:latest
    container_name: nexten-supersmartmatch-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=nexten123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - nexten-network
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  nexten-network:
    driver: bridge
    labels:
      - "com.nexten.network=main"

volumes:
  redis_data:
    driver: local
    labels:
      - "com.nexten.volume=redis"
  
  prometheus_data:
    driver: local
    labels:
      - "com.nexten.volume=prometheus"
  
  grafana_data:
    driver: local
    labels:
      - "com.nexten.volume=grafana"
