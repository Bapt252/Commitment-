# SuperSmartMatch V2 API Gateway - Configuration Environment
# Copier ce fichier en .env et personnaliser les valeurs

# =============================================================================
# CONFIGURATION GÉNÉRALE
# =============================================================================

# Environnement (development, staging, production)
ENVIRONMENT=development

# Mode debug (true/false)
DEBUG=true

# Niveau de log (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Version de l'application
VERSION=2.1.0

# =============================================================================
# SERVICES ENDPOINTS
# =============================================================================

# CV Parser Service (Port 5051)
CV_PARSER_URL=http://cv-parser:5051

# Job Parser Service (Port 5053)  
JOB_PARSER_URL=http://job-parser:5053

# Matching Service avec 9 algorithmes ML (Port 5060)
MATCHING_SERVICE_URL=http://matching-service:5060

# =============================================================================
# SÉCURITÉ JWT
# =============================================================================

# Secret JWT (OBLIGATOIRE - générer avec: openssl rand -hex 32)
JWT_SECRET=supersecure-jwt-secret-change-in-production-environment

# Algorithme JWT
JWT_ALGORITHM=HS256

# Durée de vie des tokens d'accès (en heures)
JWT_EXPIRE_HOURS=24

# Durée de vie des refresh tokens (en jours)
JWT_REFRESH_EXPIRE_DAYS=7

# =============================================================================
# INFRASTRUCTURE
# =============================================================================

# Base de données PostgreSQL
DATABASE_URL=postgresql://supersmartmatch:password@postgres:5432/supersmartmatch

# Alternative pour développement local
# DATABASE_URL=postgresql://localhost:5432/supersmartmatch

# Cache Redis
REDIS_URL=redis://redis:6379

# Alternative pour développement local
# REDIS_URL=redis://localhost:6379

# Mot de passe PostgreSQL
POSTGRES_PASSWORD=SecurePassword123!

# =============================================================================
# RATE LIMITING
# =============================================================================

# Requêtes par minute par défaut
RATE_LIMIT_PER_MINUTE=100

# Burst allowance (requêtes supplémentaires autorisées)
RATE_LIMIT_BURST=20

# =============================================================================
# CORS ET SÉCURITÉ
# =============================================================================

# Origines autorisées (séparées par des virgules)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000,http://127.0.0.1:8080

# =============================================================================
# TIMEOUTS ET PERFORMANCES
# =============================================================================

# Timeout HTTP pour les requêtes proxy (en secondes)
HTTP_TIMEOUT=30

# Timeout du circuit breaker (en secondes)
CIRCUIT_BREAKER_TIMEOUT=60

# Seuil d'échecs avant ouverture du circuit breaker
CIRCUIT_BREAKER_THRESHOLD=5

# Interval des health checks (en secondes)
HEALTH_CHECK_INTERVAL=30

# Timeout pour les health checks (en secondes)
SERVICE_TIMEOUT=5

# =============================================================================
# MONITORING ET MÉTRIQUES
# =============================================================================

# Activer les métriques Prometheus (true/false)
METRICS_ENABLED=true

# Port pour l'API Gateway
PORT=5050

# Nombre de workers (pour production)
WORKERS=4

# =============================================================================
# SERVICES EXTERNES (OPTIONNEL)
# =============================================================================

# OpenAI API Key (pour le service de matching)
OPENAI_API_KEY=sk-your-openai-api-key-here

# SMTP pour les notifications (optionnel)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# =============================================================================
# MONITORING EXTERNE (OPTIONNEL)
# =============================================================================

# Grafana admin password
GRAFANA_PASSWORD=admin

# Prometheus retention (en jours)
PROMETHEUS_RETENTION_DAYS=15

# =============================================================================
# DÉVELOPPEMENT UNIQUEMENT
# =============================================================================

# Initialiser la DB au démarrage (true/false)
INIT_DB=true

# Rechargement automatique (true/false)
RELOAD=true

# =============================================================================
# PRODUCTION UNIQUEMENT
# =============================================================================

# URL de base pour les webhooks
# BASE_URL=https://api.supersmartmatch.com

# SSL/TLS
# SSL_CERT_PATH=/etc/ssl/certs/supersmartmatch.crt
# SSL_KEY_PATH=/etc/ssl/private/supersmartmatch.key

# Sentry pour le monitoring d'erreurs
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =============================================================================
# EXEMPLES DE CONFIGURATION PAR ENVIRONNEMENT
# =============================================================================

# --- DÉVELOPPEMENT LOCAL ---
# ENVIRONMENT=development
# DEBUG=true
# CV_PARSER_URL=http://localhost:5051
# JOB_PARSER_URL=http://localhost:5053
# MATCHING_SERVICE_URL=http://localhost:5060
# DATABASE_URL=postgresql://localhost:5432/supersmartmatch
# REDIS_URL=redis://localhost:6379

# --- STAGING ---
# ENVIRONMENT=staging
# DEBUG=false
# CV_PARSER_URL=http://cv-parser-staging:5051
# JOB_PARSER_URL=http://job-parser-staging:5053
# MATCHING_SERVICE_URL=http://matching-service-staging:5060
# RATE_LIMIT_PER_MINUTE=200

# --- PRODUCTION ---
# ENVIRONMENT=production
# DEBUG=false
# LOG_LEVEL=WARNING
# JWT_EXPIRE_HOURS=2
# RATE_LIMIT_PER_MINUTE=50
# WORKERS=8
# METRICS_ENABLED=true

# =============================================================================
# NOTES IMPORTANTES
# =============================================================================

# 1. SÉCURITÉ :
#    - Changer OBLIGATOIREMENT JWT_SECRET en production
#    - Utiliser des mots de passe forts pour la DB
#    - Configurer HTTPS en production
#
# 2. PERFORMANCE :
#    - Ajuster WORKERS selon votre infrastructure
#    - Optimiser RATE_LIMIT selon votre usage
#    - Monitorer les métriques Prometheus
#
# 3. RÉSEAU :
#    - Vérifier que tous les services sont accessibles
#    - Configurer les firewalls appropriés
#    - Utiliser un load balancer en production
#
# 4. BASE DE DONNÉES :
#    - Sauvegarder régulièrement
#    - Optimiser les indexes
#    - Monitorer les performances
#
# 5. CACHE :
#    - Configurer la rétention Redis
#    - Monitorer l'utilisation mémoire
#    - Prévoir la persistance si nécessaire

# =============================================================================
# VALIDATION DE LA CONFIGURATION
# =============================================================================

# Vérifier la configuration avec :
# python -c "from config.settings import get_settings; print(get_settings())"

# Tester la connectivité :
# curl http://localhost:5050/api/gateway/health

# Vérifier les services :
# docker-compose ps

# Logs en temps réel :
# docker-compose logs -f api-gateway
