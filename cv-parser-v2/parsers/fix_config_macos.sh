#!/bin/bash

# üîß CORRECTION MANUELLE POUR MACOS - Endpoints Nexten
# Compatible avec BSD sed (macOS)

echo "üîß === CORRECTION MANUELLE MACOS - ENDPOINTS NEXTEN ==="

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# V√©rifier qu'on est √† la racine
if [ ! -f "docker-compose.yml" ]; then
    echo -e "${RED}‚ùå Erreur: Ex√©cutez depuis la racine du projet Commitment-${NC}"
    exit 1
fi

echo -e "${BLUE}üìã √âTAPE 1: Correction du fichier config principal...${NC}"

CONFIG_FILE="supersmartmatch-v2/app/config.py"
if [ -f "$CONFIG_FILE" ]; then
    echo "üìù Correction de $CONFIG_FILE"
    
    # Sauvegarde
    cp "$CONFIG_FILE" "$CONFIG_FILE.backup_$(date +%H%M%S)"
    
    # Correction compatible macOS (utilise un fichier temporaire)
    sed 's|NEXTEN_ENDPOINT = "/api/match"|NEXTEN_ENDPOINT = "/match"|g' "$CONFIG_FILE" > "$CONFIG_FILE.tmp"
    mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
    
    # V√©rifier le changement
    if grep -q 'NEXTEN_ENDPOINT = "/match"' "$CONFIG_FILE"; then
        echo -e "${GREEN}‚úÖ Configuration corrig√©e${NC}"
    else
        echo -e "${RED}‚ùå Correction √©chou√©e${NC}"
        echo "Contenu actuel:"
        grep "NEXTEN_ENDPOINT" "$CONFIG_FILE"
    fi
else
    echo -e "${RED}‚ùå Fichier $CONFIG_FILE non trouv√©${NC}"
fi

echo
echo -e "${BLUE}üìã √âTAPE 2: V√©rification du service Docker...${NC}"

# Trouver le bon nom de service
echo "Services disponibles dans docker-compose.yml:"
grep -E "^  [a-zA-Z][^:]*:" docker-compose.yml | sed 's/://g' | head -10

# Essayer de trouver le service V2
V2_SERVICE=""
if grep -q "supersmartmatch-v2-unified" docker-compose.yml; then
    V2_SERVICE="supersmartmatch-v2-unified"
elif grep -q "supersmartmatch-v2" docker-compose.yml; then
    V2_SERVICE="supersmartmatch-v2"
elif grep -q "ssm_v2" docker-compose.yml; then
    V2_SERVICE="ssm_v2"
fi

if [ -n "$V2_SERVICE" ]; then
    echo -e "${GREEN}‚úÖ Service V2 trouv√©: $V2_SERVICE${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Service V2 non identifi√© automatiquement${NC}"
    echo "Veuillez identifier manuellement le service depuis la liste ci-dessus"
    read -p "Nom du service SuperSmartMatch V2: " V2_SERVICE
fi

echo
echo -e "${BLUE}üìã √âTAPE 3: Reconstruction du conteneur...${NC}"

if [ -n "$V2_SERVICE" ]; then
    echo "üî® Arr√™t du service: $V2_SERVICE"
    docker-compose stop "$V2_SERVICE" 2>/dev/null || true
    
    echo "üóëÔ∏è  Suppression du conteneur"
    docker-compose rm -f "$V2_SERVICE" 2>/dev/null || true
    
    echo "üî® Reconstruction (cela peut prendre quelques minutes)..."
    if docker-compose build "$V2_SERVICE" --no-cache; then
        echo -e "${GREEN}‚úÖ Build r√©ussi${NC}"
        
        echo "üöÄ D√©marrage du service..."
        if docker-compose up -d "$V2_SERVICE"; then
            echo -e "${GREEN}‚úÖ Service d√©marr√©${NC}"
        else
            echo -e "${RED}‚ùå √âchec du d√©marrage${NC}"
        fi
    else
        echo -e "${RED}‚ùå √âchec du build${NC}"
    fi
else
    echo -e "${RED}‚ùå Impossible de reconstruire sans nom de service${NC}"
fi

echo
echo -e "${BLUE}üìã √âTAPE 4: Test rapide...${NC}"

echo "‚è≥ Attente de 20 secondes pour le d√©marrage..."
sleep 20

echo "üè• Test de sant√© V2..."
V2_HEALTH=$(curl -s "http://localhost:5070/health" 2>/dev/null || echo "ERROR")

if [[ "$V2_HEALTH" != "ERROR" ]]; then
    echo -e "${GREEN}‚úÖ V2 accessible${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  V2 pas encore pr√™t${NC}"
fi

echo "üè• Test Nexten..."
NEXTEN_HEALTH=$(curl -s "http://localhost:5052/health" 2>/dev/null || echo "ERROR")

if [[ "$NEXTEN_HEALTH" != "ERROR" ]]; then
    echo -e "${GREEN}‚úÖ Nexten accessible${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Nexten inaccessible${NC}"
fi

echo
echo -e "${GREEN}üéØ CORRECTION TERMIN√âE !${NC}"
echo
echo -e "${YELLOW}üìù PROCHAINES √âTAPES:${NC}"
echo "1. Testez avec le payload correct (voir ci-dessous)"
echo "2. V√©rifiez les logs: docker logs $V2_SERVICE"
echo "3. Si le probl√®me persiste, v√©rifiez la config dans le conteneur"

echo
echo -e "${BLUE}üß™ TEST MANUEL RECOMMAND√â:${NC}"
echo 'curl -X POST http://localhost:5070/api/v2/match \'
echo '  -H "Content-Type: application/json" \'
echo '  -d "{"'
echo '    "candidate": {'
echo '      "skills": ["Python", "ML"],'
echo '      "experience": 5,'
echo '      "location": "Paris"'
echo '    },'
echo '    "jobs": ['
echo '      {'
echo '        "id": "test-1",'
echo '        "title": "Dev ML",'
echo '        "skills": ["Python"],'
echo '        "location": "Paris"'
echo '      }'
echo '    ]'
echo '  }"'

echo
echo -e "${GREEN}üöÄ SCRIPT TERMIN√â !${NC}"