# Règles d'alerte pour le monitoring du projet Commitment
groups:
  # Règles d'alerte pour les services
  - name: services_alerts
    rules:
      # Service inaccessible
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Service {{ $labels.job }} est inaccessible"
          description: "Le service {{ $labels.job }} sur {{ $labels.instance }} est inaccessible depuis plus d'1 minute."

      # Temps de réponse élevé des APIs
      - alert: HighResponseTime
        expr: http_request_duration_seconds{quantile="0.95"} > 2
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Temps de réponse élevé pour {{ $labels.job }}"
          description: "Le service {{ $labels.job }} a un temps de réponse de {{ $value }}s au 95e percentile."

      # Taux d'erreur élevé
      - alert: HighErrorRate
        expr: (rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m])) * 100 > 5
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Taux d'erreur élevé pour {{ $labels.job }}"
          description: "Le service {{ $labels.job }} a un taux d'erreur de {{ $value }}% sur les 5 dernières minutes."

  # Règles d'alerte pour le système
  - name: system_alerts
    rules:
      # CPU élevé
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Utilisation CPU élevée sur {{ $labels.instance }}"
          description: "L'instance {{ $labels.instance }} utilise {{ $value }}% de CPU."

      # Mémoire élevée
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Utilisation mémoire élevée sur {{ $labels.instance }}"
          description: "L'instance {{ $labels.instance }} utilise {{ $value }}% de mémoire."

      # Espace disque faible
      - alert: LowDiskSpace
        expr: (1 - (node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"})) * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Espace disque faible sur {{ $labels.instance }}"
          description: "L'instance {{ $labels.instance }} a {{ $value }}% d'espace disque utilisé."

  # Règles d'alerte pour Docker
  - name: docker_alerts
    rules:
      # Conteneur arrêté
      - alert: ContainerDown
        expr: container_last_seen < (time() - 60)
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Conteneur {{ $labels.name }} arrêté"
          description: "Le conteneur {{ $labels.name }} sur {{ $labels.instance }} est arrêté depuis plus d'1 minute."

      # Utilisation CPU élevée du conteneur
      - alert: ContainerHighCPU
        expr: rate(container_cpu_usage_seconds_total[5m]) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Utilisation CPU élevée pour le conteneur {{ $labels.name }}"
          description: "Le conteneur {{ $labels.name }} utilise {{ $value }}% de CPU."

      # Utilisation mémoire élevée du conteneur
      - alert: ContainerHighMemory
        expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Utilisation mémoire élevée pour le conteneur {{ $labels.name }}"
          description: "Le conteneur {{ $labels.name }} utilise {{ $value }}% de sa limite mémoire."

  # Règles d'alerte pour Redis
  - name: redis_alerts
    rules:
      # Redis inaccessible
      - alert: RedisDown
        expr: redis_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Redis est inaccessible"
          description: "Redis sur {{ $labels.instance }} est inaccessible depuis plus d'1 minute."

      # Mémoire Redis élevée
      - alert: RedisHighMemory
        expr: (redis_memory_used_bytes / redis_memory_max_bytes) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Utilisation mémoire Redis élevée"
          description: "Redis utilise {{ $value }}% de sa mémoire maximale."

      # Nombre de connexions Redis élevé
      - alert: RedisHighConnections
        expr: redis_connected_clients > 100
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Nombre de connexions Redis élevé"
          description: "Redis a {{ $value }} connexions actives."

  # Règles d'alerte pour PostgreSQL
  - name: postgres_alerts
    rules:
      # PostgreSQL inaccessible
      - alert: PostgresDown
        expr: pg_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "PostgreSQL est inaccessible"
          description: "PostgreSQL sur {{ $labels.instance }} est inaccessible depuis plus d'1 minute."

      # Nombre de connexions élevé
      - alert: PostgresHighConnections
        expr: pg_stat_activity_count > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Nombre de connexions PostgreSQL élevé"
          description: "PostgreSQL a {{ $value }} connexions actives."

      # Temps de requête élevé
      - alert: PostgresSlowQueries
        expr: pg_stat_database_tup_fetched / pg_stat_database_tup_returned > 100
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Requêtes PostgreSQL lentes détectées"
          description: "PostgreSQL présente des signes de requêtes lentes."