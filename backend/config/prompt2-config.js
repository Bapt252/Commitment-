/**\n * Configuration et utilitaires pour l'intÃ©gration backend PROMPT 2\n * \n * ðŸš€ AmÃ©liorations backend:\n * - Routes optimisÃ©es pour streaming temps rÃ©el\n * - WebSocket events standardisÃ©s\n * - Gestion erreurs avancÃ©e\n * - Cache intelligent Redis\n * - MÃ©triques Prometheus dÃ©taillÃ©es\n */\n\n// Configuration des endpoints API v2.0\nexport const API_ENDPOINTS = {\n  // Parsing endpoints\n  PARSE_CV_STREAM: '/api/v2/parse/cv/stream',\n  PARSE_JOB_STREAM: '/api/v2/parse/job/stream',\n  PARSE_STATUS: '/api/v2/parse/status',\n  \n  // Validation endpoints\n  VALIDATE_FIELD: '/api/v2/parse/validate',\n  SUBMIT_CORRECTIONS: '/api/v2/parse/corrections',\n  \n  // Monitoring\n  HEALTH_CHECK: '/health',\n  METRICS: '/metrics',\n  \n  // WebSocket\n  WEBSOCKET_PATH: '/socket.io'\n};\n\n// Configuration WebSocket events\nexport const WEBSOCKET_EVENTS = {\n  // Client vers serveur\n  SUBSCRIBE_PARSING: 'subscribe_parsing',\n  UNSUBSCRIBE_PARSING: 'unsubscribe_parsing',\n  FIELD_UPDATE: 'field_update',\n  REQUEST_SUGGESTIONS: 'request_suggestions',\n  \n  // Serveur vers client\n  PARSING_PROGRESS: 'parsing_progress',\n  PARSING_COMPLETE: 'parsing_complete',\n  PARSING_ERROR: 'parsing_error',\n  VALIDATION_RESULT: 'validation_result',\n  SUGGESTIONS_READY: 'suggestions_ready',\n  \n  // SystÃ¨me\n  CONNECTION: 'connect',\n  DISCONNECT: 'disconnect',\n  ERROR: 'error'\n};\n\n// Codes d'erreur standardisÃ©s\nexport const ERROR_CODES = {\n  // Erreurs parsing\n  PARSE_001: 'FILE_TOO_LARGE',\n  PARSE_002: 'UNSUPPORTED_FORMAT',\n  PARSE_003: 'CORRUPTED_FILE',\n  PARSE_004: 'OCR_FAILED',\n  PARSE_005: 'AI_EXTRACTION_FAILED',\n  \n  // Erreurs validation\n  VALID_001: 'INVALID_EMAIL',\n  VALID_002: 'INVALID_PHONE',\n  VALID_003: 'REQUIRED_FIELD_MISSING',\n  VALID_004: 'CONFIDENCE_TOO_LOW',\n  \n  // Erreurs systÃ¨me\n  SYS_001: 'WEBSOCKET_CONNECTION_FAILED',\n  SYS_002: 'REDIS_UNAVAILABLE',\n  SYS_003: 'OPENAI_API_ERROR',\n  SYS_004: 'DATABASE_ERROR'\n};\n\n// Configuration cache Redis\nexport const CACHE_CONFIG = {\n  KEYS: {\n    PARSING_RESULT: 'parsing:result:',\n    VALIDATION_CACHE: 'validation:cache:',\n    SUGGESTIONS_CACHE: 'suggestions:cache:',\n    USER_PREFERENCES: 'user:prefs:'\n  },\n  \n  TTL: {\n    PARSING_RESULT: 86400, // 24h\n    VALIDATION_CACHE: 3600, // 1h\n    SUGGESTIONS_CACHE: 7200, // 2h\n    USER_PREFERENCES: 604800 // 7 jours\n  }\n};\n\n// MÃ©triques Prometheus\nexport const METRICS_CONFIG = {\n  COUNTERS: {\n    PARSING_REQUESTS_TOTAL: 'parsing_requests_total',\n    PARSING_ERRORS_TOTAL: 'parsing_errors_total',\n    VALIDATION_REQUESTS_TOTAL: 'validation_requests_total',\n    WEBSOCKET_CONNECTIONS_TOTAL: 'websocket_connections_total'\n  },\n  \n  HISTOGRAMS: {\n    PARSING_DURATION_SECONDS: 'parsing_duration_seconds',\n    VALIDATION_DURATION_SECONDS: 'validation_duration_seconds',\n    WEBSOCKET_MESSAGE_DURATION: 'websocket_message_duration_seconds'\n  },\n  \n  GAUGES: {\n    ACTIVE_PARSING_TASKS: 'active_parsing_tasks',\n    ACTIVE_WEBSOCKET_CONNECTIONS: 'active_websocket_connections',\n    CACHE_HIT_RATIO: 'cache_hit_ratio',\n    AVERAGE_CONFIDENCE_SCORE: 'average_confidence_score'\n  }\n};\n\n// Configuration OpenAI optimisÃ©e\nexport const OPENAI_CONFIG = {\n  MODELS: {\n    CV_EXTRACTION: 'gpt-4-1106-preview',\n    JOB_EXTRACTION: 'gpt-4-1106-preview',\n    VALIDATION: 'gpt-3.5-turbo',\n    SUGGESTIONS: 'gpt-3.5-turbo'\n  },\n  \n  PROMPTS: {\n    CV_EXTRACTION: `Extrait les informations d'un CV en JSON structurÃ© avec les champs:\n- personalInfo: {firstName, lastName, email, phone, address, title}\n- skills: {technical: [], soft: [], languages: []}\n- experience: [{company, position, duration, description}]\n- education: [{institution, degree, field, year}]\n- certifications: []\nRetourne uniquement le JSON, sans explication.`,\n    \n    JOB_EXTRACTION: `Extrait les informations d'une fiche de poste en JSON structurÃ©:\n- jobInfo: {title, company, location, contractType, department}\n- requirements: {skills: [], experience: \"\", education: \"\"}\n- conditions: {salary: \"\", benefits: []}\n- description: {summary: \"\", missions: [], profile: \"\"}\nRetourne uniquement le JSON.`,\n    \n    FIELD_VALIDATION: `Valide ce champ et suggÃ¨re des amÃ©liorations:\nChamp: {field}\nValeur: {value}\nType: {type}\nRetourne: {isValid: boolean, suggestions: string[], confidence: number}`,\n    \n    SMART_SUGGESTIONS: `GÃ©nÃ¨re 3-5 suggestions contextuelles pour ce champ:\nChamp: {field}\nValeur actuelle: {currentValue}\nType: {fieldType}\nContexte: {context}\nRetourne un array de suggestions pertinentes.`\n  },\n  \n  SETTINGS: {\n    TEMPERATURE: 0.1,\n    MAX_TOKENS: 2000,\n    TIMEOUT: 30000 // 30s\n  }\n};\n\n// Configuration OCR Tesseract\nexport const OCR_CONFIG = {\n  LANGUAGES: ['fra', 'eng'],\n  PSM: 6, // Uniform block of text\n  OEM: 3, // Default OCR Engine Mode\n  PREPROCESSING: {\n    ENHANCE_CONTRAST: true,\n    NOISE_REMOVAL: true,\n    DESKEW: true,\n    RESIZE_FACTOR: 2\n  }\n};\n\n// Templates de rÃ©ponse standardisÃ©s\nexport const RESPONSE_TEMPLATES = {\n  SUCCESS: {\n    PARSING_STARTED: {\n      status: 'success',\n      message: 'Parsing dÃ©marrÃ© avec succÃ¨s',\n      data: { taskId: '{taskId}', estimatedDuration: '{duration}' }\n    },\n    \n    PARSING_COMPLETE: {\n      status: 'completed',\n      message: 'Parsing terminÃ© avec succÃ¨s',\n      confidence: '{confidence}',\n      data: '{extractedData}',\n      suggestions: '{suggestions}',\n      fallback_required: '{fallbackRequired}'\n    }\n  },\n  \n  ERROR: {\n    GENERIC: {\n      status: 'error',\n      message: 'Une erreur est survenue',\n      code: '{errorCode}',\n      details: '{errorDetails}'\n    },\n    \n    VALIDATION_FAILED: {\n      status: 'error',\n      message: 'Erreur de validation',\n      field: '{field}',\n      errors: '{validationErrors}'\n    }\n  }\n};\n\n// Utilitaires pour le parsing\nexport const PARSING_UTILS = {\n  // GÃ©nÃ©ration d'ID de tÃ¢che unique\n  generateTaskId: () => {\n    return `parse_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  },\n  \n  // Calcul du score de confiance\n  calculateConfidence: (extractedFields: any[]) => {\n    if (!extractedFields.length) return 0;\n    \n    const totalConfidence = extractedFields.reduce((sum, field) => {\n      return sum + (field.confidence || 0);\n    }, 0);\n    \n    return totalConfidence / extractedFields.length;\n  },\n  \n  // Validation du format de fichier\n  validateFileFormat: (filename: string) => {\n    const supportedExtensions = ['pdf', 'docx', 'doc', 'jpg', 'jpeg', 'png', 'txt'];\n    const extension = filename.split('.').pop()?.toLowerCase();\n    return extension && supportedExtensions.includes(extension);\n  },\n  \n  // Estimation de la durÃ©e de parsing\n  estimateParsingDuration: (fileSize: number, fileType: string) => {\n    const baseDuration = 3000; // 3 secondes de base\n    const sizeMultiplier = fileSize / (1024 * 1024); // MB\n    const typeMultiplier = fileType === 'pdf' ? 1.2 : fileType.includes('image') ? 1.5 : 1;\n    \n    return Math.round(baseDuration * sizeMultiplier * typeMultiplier);\n  }\n};\n\n// Configuration de sÃ©curitÃ©\nexport const SECURITY_CONFIG = {\n  RATE_LIMITING: {\n    PARSING_ENDPOINT: {\n      windowMs: 15 * 60 * 1000, // 15 minutes\n      max: 50 // 50 requÃªtes par IP\n    },\n    \n    VALIDATION_ENDPOINT: {\n      windowMs: 60 * 1000, // 1 minute\n      max: 200 // 200 requÃªtes par IP\n    }\n  },\n  \n  FILE_VALIDATION: {\n    MAX_SIZE: 10 * 1024 * 1024, // 10MB\n    ALLOWED_MIME_TYPES: [\n      'application/pdf',\n      'application/msword',\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      'image/jpeg',\n      'image/png',\n      'text/plain'\n    ]\n  },\n  \n  CORS: {\n    ORIGINS: [\n      'http://localhost:3000',\n      'http://localhost:3001',\n      'https://supersmartmatch.com'\n    ],\n    METHODS: ['GET', 'POST', 'PUT', 'DELETE'],\n    ALLOWED_HEADERS: ['Content-Type', 'Authorization', 'x-task-id']\n  }\n};\n\nexport default {\n  API_ENDPOINTS,\n  WEBSOCKET_EVENTS,\n  ERROR_CODES,\n  CACHE_CONFIG,\n  METRICS_CONFIG,\n  OPENAI_CONFIG,\n  OCR_CONFIG,\n  RESPONSE_TEMPLATES,\n  PARSING_UTILS,\n  SECURITY_CONFIG\n};"