# Prometheus Configuration for SuperSmartMatch V2 Migration
# Advanced monitoring with V1/V2 comparison and business metrics

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'supersmartmatch-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load alerting rules
rule_files:
  - "alerts.yml"
  - "rules.yml"

# Scrape configuration
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # SuperSmartMatch V1 service
  - job_name: 'supersmartmatch-v1'
    static_configs:
      - targets: ['supersmartmatch-v1:5062']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    labels:
      service: 'supersmartmatch'
      version: 'v1'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)'
        replacement: '${1}'

  # SuperSmartMatch V2 service  
  - job_name: 'supersmartmatch-v2'
    static_configs:
      - targets: ['supersmartmatch-v2:5070']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    labels:
      service: 'supersmartmatch'
      version: 'v2'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)'
        replacement: '${1}'

  # Nexten ML service
  - job_name: 'nexten'
    static_configs:
      - targets: ['nexten:5052']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 15s
    labels:
      service: 'nexten'
      version: 'stable'

  # Nginx load balancer
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:9113']
    metrics_path: '/nginx_status'
    scrape_interval: 15s
    labels:
      service: 'nginx'
      component: 'load_balancer'

  # Redis monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-master:6379']
    metrics_path: '/metrics'
    scrape_interval: 30s
    labels:
      service: 'redis'
      role: 'master'

  - job_name: 'redis-replica'
    static_configs:
      - targets: ['redis-replica:6379']
    metrics_path: '/metrics'
    scrape_interval: 30s
    labels:
      service: 'redis'
      role: 'replica'

  # Node exporter for system metrics
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    labels:
      service: 'node'
      component: 'system'

  # Docker container metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['cadvisor:8080']
    metrics_path: '/metrics'
    scrape_interval: 30s
    labels:
      service: 'docker'
      component: 'containers'

  # Elasticsearch metrics
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch:9200']
    metrics_path: '/_prometheus/metrics'
    scrape_interval: 60s
    scrape_timeout: 30s
    labels:
      service: 'elasticsearch'
      component: 'logging'

  # Custom business metrics endpoint
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['supersmartmatch-v1:5062', 'supersmartmatch-v2:5070']
    metrics_path: '/api/metrics/business'
    scrape_interval: 30s
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        regex: 'supersmartmatch-v1.*'
        target_label: version
        replacement: 'v1'
      - source_labels: [__address__]
        regex: 'supersmartmatch-v2.*'
        target_label: version
        replacement: 'v2'

  # Feature flags metrics
  - job_name: 'feature-flags'
    static_configs:
      - targets: ['feature-flag-service:8080']
    metrics_path: '/metrics'
    scrape_interval: 60s
    labels:
      service: 'feature-flags'
      component: 'migration'

  # Migration-specific metrics
  - job_name: 'migration-metrics'
    static_configs:
      - targets: ['data-sync:8080']
    metrics_path: '/metrics'
    scrape_interval: 15s
    labels:
      service: 'data-sync'
      component: 'migration'

# Recording rules for computed metrics
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Remote write configuration (optional, for long-term storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "prometheus"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 50GB
    wal-compression: true