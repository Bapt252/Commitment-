#!/bin/bash

# üîß Script de diagnostic et r√©solution CV Parser V2
# Fix pour le probl√®me "Connection reset by peer" sur port 5051

echo "üîç === DIAGNOSTIC CV PARSER V2 - PORT 5051 ==="
echo "Recherche de la source du probl√®me de connexion..."
echo ""

# 1. V√©rifier l'√©tat actuel des services
echo "üìä 1. √âtat des services..."
echo "CV Parser V2 (5051):"
curl -s http://localhost:5051/health && echo " ‚úÖ Actif" || echo " ‚ùå Inactif/Probl√®me"

echo "Job Parser V2 (5053):"
curl -s http://localhost:5053/health && echo " ‚úÖ Actif" || echo " ‚ùå Inactif"

echo "Enhanced API V2.1 (5055):"
curl -s http://localhost:5055/health && echo " ‚úÖ Actif" || echo " ‚ùå Inactif"
echo ""

# 2. V√©rifier les conteneurs Docker
echo "üê≥ 2. √âtat des conteneurs Docker..."
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep -E "(5051|5053|5055|cv-parser|job-parser)"
echo ""

# 3. V√©rifier les logs des conteneurs
echo "üìã 3. Logs des conteneurs CV Parser..."
CV_CONTAINER=$(docker ps --format "{{.Names}}" | grep -i cv | head -1)
if [ ! -z "$CV_CONTAINER" ]; then
    echo "Conteneur trouv√©: $CV_CONTAINER"
    echo "Logs r√©cents:"
    docker logs --tail 20 $CV_CONTAINER
else
    echo "‚ùå Aucun conteneur CV Parser trouv√©"
fi
echo ""

# 4. V√©rifier la pr√©sence des fichiers critiques
echo "üìÅ 4. V√©rification des fichiers critiques..."
cd cv-parser-v2/parsers/

echo "fix-pdf-extraction.js:"
[ -f "fix-pdf-extraction.js" ] && echo " ‚úÖ Pr√©sent" || echo " ‚ùå Manquant"

echo "enhanced-mission-parser.js:"
[ -f "enhanced-mission-parser.js" ] && echo " ‚úÖ Pr√©sent" || echo " ‚ùå Manquant"

echo "Dockerfile:"
[ -f "../Dockerfile" ] && echo " ‚úÖ Pr√©sent" || echo " ‚ùå Manquant"

echo "app.py:"
[ -f "../app.py" ] && echo " ‚úÖ Pr√©sent" || echo " ‚ùå Manquant"
echo ""

# 5. V√©rifier les ports utilis√©s
echo "üîå 5. Ports utilis√©s..."
echo "Port 5051:"
netstat -tlnp 2>/dev/null | grep :5051 || echo " ‚ùå Aucun processus sur 5051"

echo "Port 5053:"
netstat -tlnp 2>/dev/null | grep :5053 || echo " ‚ùå Aucun processus sur 5053"

echo "Port 5055:"
netstat -tlnp 2>/dev/null | grep :5055 || echo " ‚ùå Aucun processus sur 5055"
echo ""

# 6. Solutions propos√©es
echo "üõ†Ô∏è  === SOLUTIONS PROPOS√âES ==="

# Solution 1: Restart des conteneurs
echo "1. üîÑ Red√©marrage des conteneurs CV Parser:"
echo "   docker restart \$(docker ps -q --filter 'name=cv')"
echo ""

# Solution 2: Rebuild de l'image
echo "2. üî® Reconstruction de l'image CV Parser:"
echo "   cd cv-parser-v2"
echo "   docker build -t cv-parser-v2 ."
echo "   docker run -d -p 5051:5051 --name cv-parser-v2-new cv-parser-v2"
echo ""

# Solution 3: D√©marrage direct (sans Docker)
echo "3. üêç D√©marrage direct Python (debug):"
echo "   cd cv-parser-v2"
echo "   pip install -r requirements.txt"
echo "   python app.py"
echo ""

# Solution 4: Kill et red√©marrage complet
echo "4. üí• Reset complet du syst√®me:"
echo "   docker kill \$(docker ps -q --filter 'publish=5051')"
echo "   docker rm \$(docker ps -aq --filter 'publish=5051')"
echo "   cd cv-parser-v2"
echo "   docker build -t cv-parser-v2-fixed ."
echo "   docker run -d -p 5051:5051 --name cv-parser-v2-fixed cv-parser-v2-fixed"
echo ""

# AUTO-FIX: Tentative de r√©solution automatique
echo "ü§ñ === AUTO-FIX ==="
read -p "Voulez-vous que je tente de r√©soudre automatiquement ? (y/n): " auto_fix

if [ "$auto_fix" = "y" ] || [ "$auto_fix" = "Y" ]; then
    echo "üîÑ Tentative de r√©solution automatique..."
    
    # Stopper les conteneurs CV Parser existants
    echo "Arr√™t des conteneurs CV Parser existants..."
    docker kill $(docker ps -q --filter 'publish=5051') 2>/dev/null || echo "Aucun conteneur sur 5051"
    docker rm $(docker ps -aq --filter 'publish=5051') 2>/dev/null || echo "Aucun conteneur √† supprimer"
    
    # Rebuild et red√©marrage
    echo "Reconstruction de l'image CV Parser..."
    cd cv-parser-v2
    docker build -t cv-parser-v2-fixed .
    
    echo "D√©marrage du nouveau conteneur..."
    docker run -d -p 5051:5051 --name cv-parser-v2-fixed cv-parser-v2-fixed
    
    # Test
    echo "Test du nouveau conteneur (attente 10s)..."
    sleep 10
    
    curl -s http://localhost:5051/health && echo "‚úÖ CV Parser V2 red√©marr√© avec succ√®s !" || echo "‚ùå Probl√®me persiste"
    
    echo ""
    echo "üîç Statut final des services:"
    echo "CV Parser V2 (5051):"
    curl -s http://localhost:5051/health && echo " ‚úÖ Actif" || echo " ‚ùå Toujours inactif"
    
    echo "Job Parser V2 (5053):"
    curl -s http://localhost:5053/health && echo " ‚úÖ Actif" || echo " ‚ùå Inactif"
    
    echo "Enhanced API V2.1 (5055):"
    curl -s http://localhost:5055/health && echo " ‚úÖ Actif" || echo " ‚ùå Inactif"
fi

echo ""
echo "üéØ === PROCHAINES √âTAPES ==="
echo "1. Si le probl√®me persiste, v√©rifiez les logs Docker: docker logs cv-parser-v2-fixed"
echo "2. Testez BATU Sam.pdf: curl -X POST -F 'file=@/path/to/BATU\\ Sam.pdf' http://localhost:5051/api/parse-cv/"
echo "3. Une fois r√©solu, testez le matching complet avec Enhanced API V2.1"
echo ""
echo "üìù Pour des tests avanc√©s, utilisez: python test_matching_system.py"
