# ðŸš€ SuperSmartMatch V2 - Configuration Docker Compose CorrigÃ©e
# Orchestration simplifiÃ©e utilisant les services existants

services:
  # ===== SERVICE PRINCIPAL - SUPERSMARTMATCH V2 =====
  supersmartmatch-v2:
    build:
      context: .
      dockerfile: Dockerfile.supersmartmatch-v2
    container_name: supersmartmatch-v2-unified
    restart: unless-stopped
    ports:
      - "5070:5070"
    environment:
      # Configuration service
      - SERVICE_PORT=5070
      - ENVIRONMENT=production
      - SERVICE_NAME=supersmartmatch-v2
      
      # IntÃ©grations services externes (utilise les services existants)
      - NEXTEN_URL=http://host.docker.internal:5052
      - SUPERSMARTMATCH_V1_URL=http://host.docker.internal:5062
      
      # Configuration Redis (utilise Redis existant)
      - REDIS_URL=redis://host.docker.internal:6379
      - CACHE_TTL=300
      - CACHE_ENABLED=true
      
      # Configuration circuit breakers
      - CIRCUIT_BREAKER_THRESHOLD=5
      - CIRCUIT_BREAKER_TIMEOUT=60
      - MAX_RESPONSE_TIME_MS=100
      
      # Feature flags
      - ENABLE_V2=true
      - V2_TRAFFIC_PERCENTAGE=100
      - ENABLE_NEXTEN_ALGORITHM=true
      - ENABLE_SMART_SELECTION=true
      
      # Monitoring
      - ENABLE_METRICS=true
      - LOG_LEVEL=INFO
      
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5070/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "service.name=supersmartmatch-v2"
      - "service.version=2.0.0"
      - "service.type=unified-matching"
      - "service.port=5070"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # ===== REDIS CACHE LOCAL (OPTIONNEL) =====
  redis-cache-v2:
    image: redis:7-alpine
    container_name: redis-cache-v2-local
    restart: unless-stopped
    ports:
      - "6380:6379"  # Port diffÃ©rent pour Ã©viter conflit
    environment:
      - REDIS_MAXMEMORY=256mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    command: >
      redis-server 
      --maxmemory 256mb 
      --maxmemory-policy allkeys-lru
      --save 900 1
    volumes:
      - redis-v2-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - "service.name=redis-cache-v2"
      - "service.type=cache"

# ===== VOLUMES PERSISTANTS =====
volumes:
  redis-v2-data:
    name: supersmartmatch-v2-redis-data
