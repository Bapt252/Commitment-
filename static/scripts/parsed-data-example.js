/**
 * Exemple de donn√©es pars√©es pour tester le pr√©-remplissage du formulaire
 * √Ä stocker dans sessionStorage pour simuler des donn√©es venant du backend
 */

// Format correspondant au format de donn√©es du backend (format brut avant transformation)
const mockParsedData = {
  "processing_time": 1.23,
  "parsed_at": 1714505237.987,
  "file_format": ".pdf",
  "model": "gpt-4o-mini",
  "data": {
    "personal_info": {
      "name": "Thomas Dupont",
      "email": "thomas.dupont@email.com",
      "phone": "06 12 34 56 78",
      "address": "15 Rue de la R√©publique, 75001 Paris"
    },
    "position": "D√©veloppeur Full Stack JavaScript",
    "skills": [
      { "name": "JavaScript" },
      { "name": "React" },
      { "name": "Node.js" },
      { "name": "TypeScript" },
      { "name": "Express" }
    ],
    "experience": [
      {
        "title": "D√©veloppeur Frontend",
        "company": "TechStart",
        "start_date": "Janvier 2021",
        "end_date": "Pr√©sent",
        "description": "D√©veloppement d'applications web avec React"
      },
      {
        "title": "D√©veloppeur Junior",
        "company": "WebAgency",
        "start_date": "Juin 2019",
        "end_date": "D√©cembre 2020",
        "description": "Maintenance et d√©veloppement d'applications web"
      }
    ],
    "education": [
      {
        "degree": "Master en Informatique",
        "institution": "Universit√© Paris-Saclay",
        "start_date": "2017",
        "end_date": "2019"
      },
      {
        "degree": "Licence Informatique",
        "institution": "Universit√© de Lyon",
        "start_date": "2014",
        "end_date": "2017"
      }
    ],
    "languages": [
      { "language": "Fran√ßais", "level": "Natif" },
      { "language": "Anglais", "level": "Courant" },
      { "language": "Espagnol", "level": "Interm√©diaire" }
    ],
    "softwares": [
      "VS Code",
      "Git",
      "Docker",
      "Figma",
      "Jira"
    ]
  }
};

/**
 * Fonction pour stocker les donn√©es dans sessionStorage
 * √Ä ex√©cuter dans la console pour tester le pr√©-remplissage
 */
function storeParseDataForTesting() {
  try {
    // Stocker les donn√©es dans sessionStorage
    sessionStorage.setItem('parsedCandidateData', JSON.stringify(mockParsedData));
    console.log("‚úÖ Donn√©es pars√©es stock√©es avec succ√®s dans sessionStorage");
    
    // Appliquer directement le pr√©-remplissage si FormPrefiller est disponible
    if (window.FormPrefiller && typeof window.FormPrefiller.initialize === 'function') {
      console.log("‚öôÔ∏è Tentative d'initialisation du FormPrefiller avec les donn√©es mock√©es");
      window.FormPrefiller.initialize(mockParsedData);
    } else {
      console.warn("‚ö†Ô∏è Le FormPrefiller n'est pas encore disponible, attendez que la page soit compl√®tement charg√©e");
      // On va tenter d'appliquer un pr√©-remplissage manuel basique
      setTimeout(function() {
        console.log("‚öôÔ∏è Tentative de pr√©-remplissage manuel diff√©r√©");
        const nameField = document.getElementById('full-name');
        const jobField = document.getElementById('job-title');
        
        if (nameField && mockParsedData.data && mockParsedData.data.personal_info) {
          nameField.value = mockParsedData.data.personal_info.name || '';
          console.log("‚úÖ Champ 'Nom Pr√©nom' pr√©-rempli avec:", nameField.value);
        }
        
        if (jobField && mockParsedData.data) {
          jobField.value = mockParsedData.data.position || '';
          console.log("‚úÖ Champ 'Intitul√© de poste' pr√©-rempli avec:", jobField.value);
        }
      }, 500);
    }
    
    return true;
  } catch (error) {
    console.error("‚ùå Erreur lors du stockage des donn√©es de test:", error);
    return false;
  }
}

// Cette fonction est ex√©cut√©e automatiquement au chargement du script
(function() {
  console.log("üìù Script de donn√©es d'exemple charg√©");
  
  // Stocker les donn√©es imm√©diatement
  const stored = storeParseDataForTesting();
  
  // S'assurer que le pr√©-remplissage sera effectu√© une fois le DOM charg√©
  if (stored) {
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', function() {
        console.log("üîÑ DOM charg√©, nouvelle tentative de pr√©-remplissage");
        if (window.FormPrefiller && typeof window.FormPrefiller.initialize === 'function') {
          window.FormPrefiller.initialize(mockParsedData);
        }
      });
    } else {
      // Le DOM est d√©j√† charg√©
      console.log("üîÑ DOM d√©j√† charg√©, nouvelle tentative de pr√©-remplissage");
      if (window.FormPrefiller && typeof window.FormPrefiller.initialize === 'function') {
        window.FormPrefiller.initialize(mockParsedData);
      }
    }
  }
})();
