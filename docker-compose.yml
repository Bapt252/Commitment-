services:
  # SuperSmartMatch V1 (Legacy)
  supersmartmatch-v1:
    image: supersmartmatch-v1:latest
    container_name: ssm_v1
    ports:
      - "5062:5062"
    environment:
      - ENVIRONMENT=production
      - SERVICE_VERSION=v1
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - METRICS_ENABLED=true
    networks:
      - ssm_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5062/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # SuperSmartMatch V2 (Target)
  supersmartmatch-v2:
    image: supersmartmatch-v2:2.0.0
    container_name: ssm_v2
    ports:
      - "5070:5070"
    environment:
      - ENVIRONMENT=production
      - SERVICE_VERSION=v2
      - REDIS_URL=redis://redis:6379
      - V1_SERVICE_URL=http://supersmartmatch-v1:5062
      - NEXTEN_SERVICE_URL=http://nexten-matcher:5052
      - LOG_LEVEL=INFO
      - METRICS_ENABLED=true
      - FEATURE_FLAGS_ENABLED=true
    networks:
      - ssm_network
    restart: unless-stopped
    depends_on:
      - redis
      - supersmartmatch-v1
      - nexten-matcher

  # Nexten Matcher
  nexten-matcher:
    image: nexten-matcher:latest
    container_name: nexten_matcher
    ports:
      - "5052:5052"
    environment:
      - ENVIRONMENT=production
      - SERVICE_VERSION=nexten
      - REDIS_URL=redis://redis:6379
    networks:
      - ssm_network
    restart: unless-stopped

  # Load Balancer
  nginx:
    image: nginx:alpine
    container_name: ssm_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      - ssm_network
    restart: unless-stopped
    depends_on:
      - supersmartmatch-v1
      - supersmartmatch-v2

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ssm_redis
    ports:
      - "6379:6379"
    networks:
      - ssm_network
    restart: unless-stopped

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: ssm_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules:/etc/prometheus/rules:ro
    networks:
      - ssm_network
    restart: unless-stopped

  # Monitoring - Grafana  
  grafana:
    image: grafana/grafana:latest
    container_name: ssm_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    networks:
      - ssm_network
    restart: unless-stopped

networks:
  ssm_network:
    driver: bridge
