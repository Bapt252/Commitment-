version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: nexten-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nexten
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - nexten-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d nexten"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:alpine
    container_name: nexten-redis
    volumes:
      - redis-data:/data
    networks:
      - nexten-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  storage:
    image: minio/minio
    container_name: nexten-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - nexten-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nexten-api
    ports:
      - "5050:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      storage:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/nexten
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: storage:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      CV_PARSER_SERVICE_URL: http://cv-parser:5000
      MATCHING_SERVICE_URL: http://matching:5000
      PORT: 5000
    networks:
      - nexten-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  cv-parser:
    build:
      context: ./cv-parser-service
      dockerfile: Dockerfile
    container_name: nexten-cv-parser
    ports:
      - "5051:5000"
    depends_on:
      - storage
    environment:
      PORT: 5000
      MINIO_ENDPOINT: storage:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    networks:
      - nexten-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  matching:
    build:
      context: ./matching-service
      dockerfile: Dockerfile
    container_name: nexten-matching
    ports:
      - "5052:5000"
    depends_on:
      - postgres
    environment:
      PORT: 5000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/nexten
    networks:
      - nexten-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nexten-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:5050
    depends_on:
      - api
    networks:
      - nexten-network
    restart: unless-stopped

networks:
  nexten-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  minio-data:
