#!/bin/bash

# Couleurs pour le terminal
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üöÄ Starting NexTen Project Rebuild...${NC}\n"

# √âtape 1: Arr√™ter les services en cours
echo -e "${GREEN}1. Stopping running services...${NC}"
docker-compose down --remove-orphans
echo -e "${GREEN}‚úì Services stopped${NC}\n"

# √âtape 2: Supprimer les volumes obsol√®tes
echo -e "${GREEN}2. Removing obsolete volumes...${NC}"
docker volume prune -f
echo -e "${GREEN}‚úì Volumes cleaned${NC}\n"

# √âtape 3: Supprimer les images existantes
echo -e "${GREEN}3. Removing existing images...${NC}"
docker-compose rm -f
docker image prune -f
echo -e "${GREEN}‚úì Images cleaned${NC}\n"

# √âtape 4: V√©rifier les fichiers requirements.txt
echo -e "${GREEN}4. Checking requirements.txt files...${NC}"
if [ ! -f "cv-parser-service/requirements.txt" ]; then
    echo -e "${RED}‚ùå cv-parser-service/requirements.txt not found!${NC}"
    exit 1
fi
if [ ! -f "matching-service/requirements.txt" ]; then
    echo -e "${RED}‚ùå matching-service/requirements.txt not found!${NC}"
    exit 1
fi
if [ ! -f "backend/requirements.txt" ]; then
    echo -e "${RED}‚ùå backend/requirements.txt not found!${NC}"
    exit 1
fi
echo -e "${GREEN}‚úì All requirements.txt files found${NC}\n"

# √âtape 5: Rebuild avec no-cache
echo -e "${GREEN}5. Rebuilding all services (no cache)...${NC}"
docker-compose build --no-cache
if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Build failed! Check the logs above.${NC}"
    exit 1
fi
echo -e "${GREEN}‚úì Build successful${NC}\n"

# √âtape 6: D√©marrer les services
echo -e "${GREEN}6. Starting services...${NC}"
docker-compose up -d
if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Failed to start services!${NC}"
    exit 1
fi
echo -e "${GREEN}‚úì Services started${NC}\n"

# √âtape 7: V√©rifier le statut des containers
echo -e "${GREEN}7. Checking container status...${NC}"
docker-compose ps
echo ""

# √âtape 8: Afficher les logs pour debug (optionnel)
echo -e "${YELLOW}üìã Do you want to see the logs? (y/n)${NC}"
read -r answer
if [ "$answer" = "y" ]; then
    docker-compose logs -f --tail=100
fi

echo -e "\n${GREEN}‚úÖ NexTen Project rebuild completed successfully!${NC}"
echo -e "${YELLOW}üåê Your services should now be running without errors.${NC}"
echo -e "${YELLOW}üìä Check the container status above.${NC}"